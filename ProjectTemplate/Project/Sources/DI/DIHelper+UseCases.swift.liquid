//
//  DIHelper+UseCases.swift
//  {{ module_info.name }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright {{ year }} {{ developer.company }}. All rights reserved.

import Foundation
import DITranquillity
import ObjectiveC

class DIUseCases: NSObject {

    var parts = [DIPart.Type]()
}

extension DIHelper {

    func registerUseCases() {
        let modulesObject = DIUseCases()
        var methodCount: UInt32 = .zero

        guard let methodList = class_copyMethodList(
            DIUseCases.self,
            &methodCount
        ) else { return }

        (Int.zero ..< Int(methodCount))
            .map { String(cString: sel_getName(method_getName(methodList[$0]))) }
            .filter { $0.starts(with: String.partLoadUseCasesPrefix) }
            .forEach { modulesObject.perform( Selector($0) ) }

        modulesObject.parts.forEach { part in
            self.container.append(part: part)
        }
    }
}

private extension String {

    static let partLoadUseCasesPrefix = "loadUseCase"
}