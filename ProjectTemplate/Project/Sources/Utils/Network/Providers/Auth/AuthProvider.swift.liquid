//
//  AuthProvider.swift
//  {{ module_info.name }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright {{ year }} {{ developer.company }}. All rights reserved.

import Moya

enum AuthProvider {

    case signInAnonymously
    case refreshToken(authentication: Authentication)
}

extension AuthProvider: APITarget {

    var path: String {
        switch self {
        case .signInAnonymously:
            return "\(String.apiV1Path)/sign_in_anonymously"

        case .refreshToken:
            return "\(String.apiV1Path)/refresh_token"
        }
    }

    var method: Method {
        .post
    }

    var task: HTTPTask {
        switch self {
        case .signInAnonymously,
             .refreshToken:
            return .requestPlain
        }
    }

    var headers: [String: String]? {
        switch self {
        case .refreshToken(let authentication):
            return [
                .clientSecret: Configurations.instance.secretKey,
                .refreshToken: authentication.refreshToken.value
            ]

        default:
            return [
                .clientSecret: Configurations.instance.secretKey
            ]
        }

    }
}

extension AuthProvider: AccessTokenAuthorizable {

    var authorizationType: AuthorizationType? {
        switch self {
        case .signInAnonymously, .refreshToken:
            return .none
        }
    }
}
