//
//  {{ module_info.name }}LayoutManager.swift
//  {{ module_info.project_name }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright {{ year }} {{ developer.company }}. All rights reserved.
//

import UIKit
import SQExtensions
import SQCompositionLists
import SQUIKit

protocol {{ module_info.name }}LayoutManagerDelegate: BlockLayoutManagerDelegate {

    func sectionType(forSection section: Int) -> {{ module_info.name }}Section?
}

final class {{ module_info.name }}LayoutManager: BlockLayoutManager {

    private weak var delegate: {{ module_info.name }}LayoutManagerDelegate!
    private weak var collectionView: UICollectionView?

    init(
        delegate: {{ module_info.name }}LayoutManagerDelegate,
        collectionView: UICollectionView?
    ) {
        super.init()

        self.delegate = delegate
        self.blockLayoutManagerDelegate = delegate
        self.collectionView = collectionView
    }

    func createLayout(
        layoutDelegate: CustomizableLayoutDelegate?
    ) -> CustomizableLayout {
        let layoutConfig = UICollectionViewCompositionalLayoutConfiguration()

        let collectionViewLayout = CustomizableLayout(
            sectionProvider: { index, _ in
                let section = self.delegate.sectionType(forSection: index)

                switch section?.type {
                    case .share:
                        return self.createBlockLayout(
                            section: section,
                            collectionView: self.collectionView
                        )
    
                    default: break
                }

                let sectionLayout = self.layoutGroup(forSection: section)

                let backgroundDecoration = NSCollectionLayoutDecorationItem.background(
                    elementKind: .backgroundElementKind
                )

                backgroundDecoration.zIndex = -1

                sectionLayout.decorationItems = [
                    backgroundDecoration
                ]

                if section?.header != nil {
                    let header = NSCollectionLayoutBoundarySupplementaryItem(
                        layoutSize: .init(
                            widthDimension: .fractionalWidth(1),
                            heightDimension: .estimated(44)
                        ),
                        elementKind: .collectionSectionHeader,
                        alignment: .top
                    )

                    header.pinToVisibleBounds = true
                    sectionLayout.boundarySupplementaryItems.append(header)
                }

                if section?.footer != nil {
                    let footer = NSCollectionLayoutBoundarySupplementaryItem(
                        layoutSize: .init(
                            widthDimension: .fractionalWidth(1),
                            heightDimension: .estimated(44)
                        ),
                        elementKind: .collectionSectionFooter,
                        alignment: .bottom
                    )
                    sectionLayout.boundarySupplementaryItems.append(footer)
                }
                return sectionLayout
            },
            configuration: layoutConfig
        )

        collectionViewLayout.delegate = layoutDelegate

        return collectionViewLayout
    }

    private func layoutGroup(forSection section: {{ module_info.name }}Section?) -> NSCollectionLayoutSection {
        return .createPlainLayoutSection()
    }
}
